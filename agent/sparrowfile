#!raku

use Sparky::JobApi;

use Sparky::JobApi;

class Pipeline

does Sparky::JobApi::Role

{

  method stage-main {

    bash "raku -V > rakuenv.txt";

    my $my = Sparky::JobApi.new( :mine );

    $my.put-file("rakuenv.txt","rakuenv.txt");

    file-delete "tasks.tar";

    say "archiving tasks/ to tasks.tar";

    bash "tar cf {$*CWD}/tasks.tar -C tasks/ .";    

    my $orch-job = Sparky::JobApi.new(
      :api<https://sparky.sparrowhub.io>,
      :project<browny.queue>,
    );

    my $orch-job2 = Sparky::JobApi.new(
      :api<https://sparky.sparrowhub.io>,
      :project<browny.agents>,
    );

    my $chars = 'a'..'z', 'A'..'Z', '0'..'9';

    my $random-string = $chars.roll(10).join;

    my $agent = "/tmp/agent".IO ~~ :f ?? "/tmp/agent".IO.slurp !! $random-string;

    unless  "/tmp/agent".IO ~~ :f {
      "/tmp/agent".IO.spurt("agent-" ~ $random-string);
    }

    while True {

      $orch-job2.queue({
        description => "hello from $agent", 
        tags => %(
          agent => $agent,
        ),
      });
      
      my $q = $orch-job.get-stash();

      say "load requests from orchestrator queue";
      
      if $q && $q<list> {
        my $version = $q<version>;
        for $q<list><> -> $i {
          next unless $i<agent> eq $agent;
          my $j = Sparky::JobApi.new(
            :project<test>,
          );
          $j.put-stash(%(list => $i<modules>));
          $j.queue({
            description => "test job: {$i<job_id>}", 
            tags => %(
              rakudo-version => $version,
            ),
          });
        }
      }
      sleep(10);
    }
  }

  method stage-test {

    my $my = Sparky::JobApi.new( :mine );

    my $blob = $my.get-file("tasks.tar");

    directory "tasks";

    my $fh = open "tasks/tasks.tar", :w, :bin;
    $fh.write($blob);
    $fh.close;

    bash "tar -xf tasks.tar  && ls -l", %(
      cwd => "{$*CWD}/tasks",
      description => "unpack tasks.tar",
    );

    my @list = $my.get-stash()<list><>;
    my %results;

    my $orch-job = Sparky::JobApi.new(
      :api<https://sparky.sparrowhub.io>,
      :project<browny.results>,
    );

    for @list.sort -> $m {
      %results{$m} = %( status => "", log => "" );
      my $s = task-run "tasks/run-test", %(
        module => $m
      );
      if $s<success> == 1 {
        %results{$m}<status> = True
      } else {
        %results{$m}<status> = False;
        %results{$m}<log> = "log.txt".IO.slurp;
      }
    }

    $orch-job.put-stash(%results);

    $orch-job.queue({
      description => "results", 
      tags => %(
        rakudo-version => tags()<rakudo-version>,
      ),
    });
  }

}


Pipeline.new.run;